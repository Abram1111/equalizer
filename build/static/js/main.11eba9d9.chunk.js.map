{"version":3,"sources":["VerticalSlider.tsx","index.tsx"],"names":["theme","createTheme","palette","primary","main","purple","secondary","valuetext","value","VerticalSlider","render","Box","sx","height","ThemeProvider","Slider","WebkitAppearance","margin","className","orientation","defaultValue","props","args","getAriaValueText","valueLabelDisplay","step","color","min","max","onChange","event","Streamlit","setComponentValue","target","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"oSA0BMA,EAAQC,YAAY,CACxBC,QAAS,CACPC,QAAS,CAEPC,KAAMC,IAAO,MAEfC,UAAW,CAETF,KAAM,cAKZ,SAASG,EAAUC,GACjB,MAAM,GAAN,OAAUA,EAAK,QACjB,CAAC,IAEKC,EAAc,iKAmCjB,OAnCiB,oCACXC,OAAS,WACd,OACE,cAACC,EAAA,EAAG,CAACC,GAAI,CAAEC,OAAQ,IAAK,SACtB,cAACC,EAAA,EAAa,CAACd,MAAOA,EAAM,SAC1B,cAACe,EAAA,EAAM,CACLH,GAAI,CACF,wBAAyB,CACvBI,iBAAkB,mBAKpBC,OAAQ,IAEVC,UAAU,SACVC,YAAY,WACZC,aAAc,EAAKC,MAAMC,KAAY,MACrCC,iBAAkBhB,EAClBiB,kBAAkB,OAClBC,KAAM,EAAKJ,MAAMC,KAAW,KAC5BI,MAAM,YAENC,IAAK,EAAKN,MAAMC,KAAU,IAC1BM,IAAK,EAAKP,MAAMC,KAAU,IAC1BO,SAAU,EAAKA,cAKzB,EAAC,EAGIA,SAAW,SAACC,GACfC,IAAUC,kBAAkBF,EAAMG,OAAOzB,MAC3C,EAAC,wBAnCiB,CAAS0B,KAyDdC,cAAwB1B,GChGvC2B,IAAS1B,OACP,cAAC,IAAM2B,WAAU,UACf,cAAC,EAAc,MAEjBC,SAASC,eAAe,Q","file":"static/js/main.11eba9d9.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport \"./VerticalSlider.css\"\n\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\"\nimport Box from \"@mui/material/Box\"\nimport Slider from \"@mui/material/Slider\"\nimport { purple } from \"@mui/material/colors\"\n\n// const marks = [\n//   {\n//     value: 0,\n//     label: \"0\",\n//   },\n//   {\n//     value: 10,\n//     label: \"10\",\n//   },\n// ]\n\n\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: purple[500],\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: \"#BF0000\",\n    },\n  },\n})\n\nfunction valuetext(value: number) {\n  return `${value}Â°C`\n}\n\nclass VerticalSlider extends StreamlitComponentBase {\n  public render = (): ReactNode => {\n    return (\n      <Box sx={{ height: 70 }}>\n        <ThemeProvider theme={theme}>\n          <Slider\n            sx={{\n              '& input[type=\"range\"]': {\n                WebkitAppearance: \"slider-vertical\",\n              },\n              // \"& .MuiSlider-thumb\": {\n              //   borderRadius: \"3px\",\n              // },\n              margin: 10,\n            }}\n            className=\"slider\"\n            orientation=\"vertical\"\n            defaultValue={this.props.args[\"value\"]}\n            getAriaValueText={valuetext}\n            valueLabelDisplay=\"auto\"\n            step={this.props.args[\"step\"]}\n            color=\"secondary\"\n            // marks={marks}\n            min={this.props.args[\"min\"]}\n            max={this.props.args[\"max\"]}\n            onChange={this.onChange}\n          />\n        </ThemeProvider>\n      </Box>\n    )\n  }\n\n\npublic onChange = (event: any) => {\n    Streamlit.setComponentValue(event.target.value)\n  }\n}\n\n\n// class VerticalSlider extends StreamlitComponentBase {\n//   public render = (): ReactNode => {\n//     return (\n//       <>\n//         <input\n//           type=\"range\"\n//           className=\"slider\"\n//           min={this.props.args[\"min\"]}\n//           max={this.props.args[\"max\"]}\n//           defaultValue={this.props.args[\"value\"]}\n//           key={this.props.args[\"key\"]}\n//           step={1}\n//           onChange={this.onChange}\n//         />\n//       </>\n//     )\n//   }\n\nexport default withStreamlitConnection(VerticalSlider)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport VerticalSlider from \"./VerticalSlider\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <VerticalSlider />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}